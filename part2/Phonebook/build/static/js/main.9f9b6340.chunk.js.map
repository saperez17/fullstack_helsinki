{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","onChangeSearch","filterInputValue","onChange","value","PersonForm","formSubmitHandler","inputHandler","newContact","onSubmit","name","number","type","Person","deleteClickHandler","onClick","Persons","persons","filter","setPersons","fileredContacts","person","toLowerCase","startsWith","map","key","toDeleteContact","contact","window","confirm","personService","catch","err","console","log","onDeleteHandler","Notification","notification","content","className","App","useState","setNewContact","setFilter","notificationMessage","setNotificationMessage","useEffect","initialPersons","error","e","target","preventDefault","userSearch","find","contactUpdateResponse","prevState","setTimeout","createdPerson","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.9f9b6340.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = 'http://localhost:3001/api/persons';\r\n\r\nconst getAll = ()=>{\r\n    const request =  axios.get(baseUrl)\r\n    return request.then(response=>response.data)\r\n}\r\n\r\nconst create = newObject=>{\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response=>response.data)\r\n}\r\n\r\nconst update = (id, newObject)=>{\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response=>response.data)\r\n}\r\n\r\nconst deleteContact = id =>{\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response=>response.data)\r\n}\r\nexport default {\r\n    getAll, \r\n    create,\r\n    update,\r\n    deleteContact\r\n}","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport personService from './services/persons';\r\nimport \"./styles.css\";\r\n\r\nconst Filter = ({ onChangeSearch, filterInputValue }) => {\r\n  return (\r\n    <div>\r\n      filter shown with{\" \"}\r\n      <input onChange={onChangeSearch} value={filterInputValue} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PersonForm = ({ formSubmitHandler, inputHandler, newContact }) => {\r\n  return (\r\n    <form onSubmit={formSubmitHandler}>\r\n      <div>\r\n        name:{\" \"}\r\n        <input name=\"name\" onChange={inputHandler} value={newContact.name} />\r\n      </div>\r\n      <div>\r\n        number:{\" \"}\r\n        <input\r\n          name=\"number\"\r\n          onChange={inputHandler}\r\n          value={newContact.number}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst Person = ({ name, number, id ,deleteClickHandler}) => {\r\n  return (\r\n    <div key={id}>\r\n      {name} {number}\r\n      <button onClick={deleteClickHandler}>delete</button>\r\n    </div>\r\n  );\r\n};\r\nconst Persons = ({ persons, filter, setPersons }) => {\r\n  const fileredContacts = persons.filter((person) =>\r\n    person.name.toLowerCase().startsWith(filter.toLowerCase())\r\n  );\r\n  const onDeleteHandler = id =>{\r\n    const toDeleteContact = persons.filter(contact => contact.id===id);\r\n    const userConfirmation = window.confirm(`Are you sure you want to delete ${toDeleteContact.name}`);\r\n    if(userConfirmation){\r\n      personService.deleteContact(id)\r\n      .then(response=>{\r\n        setPersons(persons.filter(person => person.id !== id));\r\n      })\r\n      .catch(err=>{\r\n        console.log(\"error here\")\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {fileredContacts.map((person, key) => (\r\n        <Person name={person.name} number={person.number} id={person.id} deleteClickHandler={()=>onDeleteHandler(person.id)}/>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Notification = ({notification})=>{\r\n  if (notification.content===null) return null\r\n  return(\r\n    <div className={notification.type===1?\"notificationSuccess\":\"notificationError\"}>\r\n      {notification.content}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newContact, setNewContact] = useState({ name: \"\", number: \"\" });\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [notificationMessage, setNotificationMessage] = useState({content:null, type:null})\r\n\r\n  useEffect(()=>{\r\n    personService.getAll()\r\n    .then(initialPersons=>{\r\n      setPersons(initialPersons)\r\n    })\r\n    .catch(error =>{\r\n      console.log(\"Something went wrong\")\r\n    })\r\n  }, [])\r\n  const inputHandler = (e) => {\r\n    setNewContact((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value\r\n    }));\r\n  };\r\n\r\n  const formSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    let userSearch = persons.find((person) => person.name === newContact.name);\r\n    if (!userSearch) {\r\n      personService.create(newContact)\r\n      .then(createdPerson =>{\r\n        console.log(\"created person\", createdPerson)\r\n        setNotificationMessage(\r\n          prevState=>(\r\n            {\r\n              ...prevState,\r\n              content: `${newContact.name} added successfully!`,\r\n              type: 1\r\n            }\r\n          ))\r\n        setTimeout(()=>{\r\n          setNotificationMessage(prevState=>(\r\n            {\r\n              ...prevState,\r\n              content: null,\r\n              type: null\r\n            }\r\n          ))\r\n        }, 5000)\r\n        setPersons((prevState) => [...prevState, createdPerson])\r\n        setNewContact({ name: \"\", number: \"\" });\r\n      })\r\n      .catch(err => {\r\n        console.log(\"error\", err)\r\n      })\r\n    } else {\r\n      const userConfirmation = window.confirm(`${userSearch.name} is already added to phonebook, replace the old number with a new one?`);\r\n      if (userConfirmation){\r\n        userSearch.number = newContact.number\r\n        personService.update(userSearch.id, userSearch)\r\n        .then(contactUpdateResponse =>{          \r\n          // `${userSearch.name} updated successfully!`\r\n          setNotificationMessage(prevState=>(\r\n            {\r\n              ...prevState,\r\n              content: `${userSearch.name} updated successfully!`,\r\n              type: 1\r\n            }\r\n          ))\r\n          setTimeout(()=>{\r\n            setNotificationMessage(prevState=>(\r\n              {\r\n                ...prevState,\r\n                content: null,\r\n                type: null\r\n              }\r\n            ))\r\n          }, 5000)\r\n          setNewContact({ name: \"\", number: \"\" });\r\n        }).catch(err=>{\r\n          setPersons(persons.filter(person=>person.id !== userSearch))\r\n          \r\n          setNotificationMessage(prevState=>(\r\n            {\r\n              ...prevState,\r\n              content: `Information of ${userSearch.name} has already been removed from the server.`,\r\n              type: 0\r\n            }\r\n          ))\r\n          setTimeout(()=>{\r\n            setNotificationMessage(prevState=>(\r\n              {\r\n                ...prevState,\r\n                content: null,\r\n                type: null\r\n              }\r\n            ))\r\n          }, 5000)\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeSearch = (e) => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification  notification={notificationMessage}/>\r\n      <Filter onChangeSearch={onChangeSearch} filterInputValue={filter} />\r\n\r\n      <h2>add a new</h2>\r\n      <PersonForm\r\n        formSubmitHandler={formSubmitHandler}\r\n        inputHandler={inputHandler}\r\n        newContact={newContact}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Persons persons={persons} setPersons={setPersons} filter={filter} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}